---
tiers:
    -
        name: smoke-usecases
        order: 1
        description: >-
            ONAP E2E tests
        testcases:
            -
                case_name: basic_vm
                project_name: integration
                enabled: true
                criteria: 100
                blocking: false
                description: >-
                    Onboard and instantiate a simple ubuntu20.04 VM
                    using a_la_carte bpmn
                dependencies:
                run:
                    name: basic_vm
            -
                case_name: basic_vm_macro
                project_name: integration
                enabled: true
                criteria: 100
                blocking: false
                description: >-
                    Onboard and instantiate a simple ubuntu20.04 VM
                    using macro bpmn
                dependencies:
                run:
                    name: basic_vm_macro
            -
                case_name: basic_network
                project_name: integration
                enabled: true
                criteria: 100
                blocking: false
                description: >-
                    Onboard and instantiate a basic network (ONAP VL)
                dependencies:
                run:
                    name: basic_network
            -
                case_name: basic_cnf
                project_name: integration
                enabled: true
                criteria: 100
                blocking: false
                description: >-
                    Onboard and instantiate a basic cnf (nginx in k8s namespace)
                dependencies:
                run:
                    name: basic_cnf
            -
                case_name: basic_cds
                project_name: integration
                enabled: true
                criteria: 100
                blocking: false
                description: >-
                    First basic test on CDS, including the creation of a Nodeport to expose
                    the CDS blueprint processor, bootstrap CDS blueprintprocessor, upload data
                    dictionnaire and enrich CBA file
                dependencies:
                run:
                    name: basic_cds
            -
                case_name: basic_onboard
                project_name: integration
                enabled: true
                criteria: 100
                blocking: false
                description: >-
                    Subset of basic_vm that performs only the onbaording part. A random service
                    name is created to be sure that all the onboard oiperations are performed
                    The main intereste is for stability tests, we can distinguish onboarding only and full tests.
                    First basic test on CDS, including the creation of a Nodeport to expose
                dependencies:
                run:
                    name: basic_onboard
            -
                case_name: pnf_macro
                project_name: integration
                enabled: true
                criteria: 100
                blocking: false
                description: >-
                    Instantiate a PNF using macro flow. It requires the use of the pnf simulator.
                dependencies:
                run:
                    name: pnf_macro
            -
                case_name: basic_clamp
                project_name: integration
                enabled: true
                criteria: 100
                blocking: false
                description: >-
                    Onboard and enrich a model with TCA. Create a loop using
                    clamp. Distribute the loop to Policy and DCAE.
                dependencies:
                run:
                    name: basic_clamp
            -
                case_name: basic_vm_macro_stability
                project_name: integration
                enabled: true
                criteria: 100
                blocking: false
                description: >-
                    Onboard and instantiate a simple ubuntu20.04 VM
                    using macro bpmn. Unlike basic_vm_macro, we consider
                    a model including an already enriched CBA so no
                    interaction with CDS is required.
                dependencies:
                run:
                    name: basic_vm_stability
            -
                case_name: cds_resource_resolution
                project_name: integration
                enabled: true
                criteria: 100
                blocking: false
                description: >-
                    CDS resource resolution tests. It requires a CDS mock server
                    automatically installed as tets prerequisite.
                dependencies:
                run:
                    name: cds_resource_resolution
            -
                case_name: basic_cnf_macro
                project_name: integration
                enabled: true
                criteria: 100
                blocking: false
                description: >-
                    Basic CNF macro test. Unlike the Basic Cnf use case, here
                    we utilize cnf-adapter orchestration path in SO, that does not
                    require MSB and creates k8s-resources information in AAI.
                    It has also VSP package that contains only helm package,
                    in this case Apache server. We utilize here already enriched
                    CBA and orchestration enables config-deploy process that
                    performs validation of the state of the deployed Apache
                    server and does the scaling of replica-count to 2 pods.
                dependencies:
                run:
                    name: basic_cnf_macro

            -
                case_name: basic_cps
                project_name: integration
                enabled: true
                criteria: 100
                blocking: false
                description: >-
                    Create CPS resources: dataspace, schemaset, anchor and node
                    and delete them.
                dependencies:
                run:
                    name: basic_cps
            -
                case_name: status
                project_name: integration
                enabled: true
                criteria: 100
                blocking: false
                description: >-
                    Checks status of all k8s resources in the selected namespace
                dependencies:
                run:
                    name: status
